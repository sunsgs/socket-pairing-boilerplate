// Generated by CoffeeScript 1.3.3
var MobileClient;

MobileClient = (function() {

  MobileClient.prototype.animationRequest = null;

  function MobileClient(motionData) {
    var _this = this;
    this.motionData = motionData != null ? motionData : null;
    if (this.motionData === null) {
      throw new Error('Must pass a MotionCapture instance');
      return;
    }
    this.socket = io.connect();
    this.socket.on("connect", function() {
      return _this.onConnect();
    });
  }

  MobileClient.prototype.broadcastMobileData = function() {
    return this.socket.emit("mobile-send", {
      gyro: this.motionData.gyro,
      acceleration: this.motionData.acceleration,
      orientation: this.motionData.orientation
    });
  };

  MobileClient.prototype.broadcastConnection = function(sessionID_) {
    var data;
    data = {
      session: sessionID_
    };
    return this.socket.emit("session-connect", data);
  };

  MobileClient.prototype.endAnimation = function() {
    return window.cancelAnimationFrame(this.animationRequest);
  };

  MobileClient.prototype.onConnect = function() {
    var sessionID,
      _this = this;
    this.socket.addListener("connection-established", function(data) {
      return _this.onConnectionEstablished(data);
    });
    sessionID = window.location.search.replace("?sessionID=", '');
    console.log(sessionID.length, isNaN(sessionID), sessionID);
    if (isNaN(sessionID) === false && sessionID.length === 4) {
      return this.broadcastConnection(sessionID);
    }
  };

  MobileClient.prototype.onConnectionEstablished = function(data) {
    console.log('onConnectionEstablished', data);
    $("#session-form").remove();
    $("body").html("begin rotating phone");
    return this.onAnimationFrame();
  };

  MobileClient.prototype.onAnimationFrame = function() {
    var _this = this;
    this.animationRequest = window.requestAnimationFrame(function() {
      return _this.onAnimationFrame();
    });
    return this.broadcastMobileData();
  };

  return MobileClient;

})();
